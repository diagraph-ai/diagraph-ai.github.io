{"props":{"id":"node-1744815219886","x":100,"y":101,"format":"node","title":"SBT","showChildren":true},"nodes":{"node-1745584371468":{"props":{"id":"node-1745584371468","x":10,"y":60,"format":"text","title":"New","text":"Introduction","toolTipText":"<div><i>SBT</i></div>- A simple build tool for Scala, Java and more<div>- Requires java1.8 or later</div><div><br></div><div><i>Features</i></div><div><i>-&nbsp;</i>Little or no configuration required for small projects</div><div>- Scala based build definition, that can use full flexibility of Scala code</div><div>- Accurate incremental compilation using information from compiler</div><div>- Library management support using Coursier</div><div>- Continuous compilation and testing with triggered execution</div><div>- Supports testing with Scala Check, spec, Scala Test.</div><div>- Starts the Scala REPL with project classes and dependencies on Classpath</div><div>- Modularisation support using sub projects</div><div>- Parallel task execution including parallel testing execution</div>","width":100,"height":30,"toolTipWidth":508,"toolTipHeight":327}},"node-1745584433982":{"props":{"id":"node-1745584433982","x":14,"y":154,"format":"text","title":"New","text":"sbt shell","toolTipText":"- sbt shell has a command line with tab completion and history<div>$ sbt&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;(starts the sbt shell)</div><div>$ settings&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (lists all setting keys)</div><div>$ tasks&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;(lists all task keys)</div><div>$ help&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;(displays detailed help)</div><div>$ console&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (starts interpreter with a classpath including all compiled source files, and dependencies)</div><div>$ clean&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;(delete all compiled files)</div><div>$ compile&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (to compile all source files)</div><div>$ test&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (to run test files)</div><div>$ run&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;(to run compiled files)</div><div>$ package&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (creates jar)</div><div>$ reload&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (reload the build definition)</div><div>$ exit&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;(exits from shell)</div><div>$ sbt clean compile \"testOnly TestA TestB)&nbsp; &nbsp;(batch mode)</div><div>- running in batch mode requires JVM, JIT so its slower in compares to sbt shell</div><div>- to make command run when file changed, use ~ before the command</div>","width":100,"height":30,"toolTipWidth":525,"toolTipHeight":279}},"node-1745584390269":{"props":{"id":"node-1745584390269","x":14,"y":199,"format":"text","title":"New","text":"Directory Structure","toolTipText":"- Base<div>&nbsp; &nbsp;- project&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (can contain Scala files that support build configuration)</div><div>&nbsp; &nbsp; &nbsp; - build.properties&nbsp; &nbsp;</div><div>&nbsp; &nbsp; &nbsp; - plugins.sbt (defines sbt plugins used by this project)<br><div>&nbsp; &nbsp;- src</div><div>&nbsp; &nbsp; &nbsp; - main</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;- scala&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;(source files)</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;- resources (resource files)</div><div>&nbsp; &nbsp; &nbsp; - test</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;- scala&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (test files)</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;- resources. (resource files)</div><div>&nbsp; &nbsp;- target&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (compiled files)<br><div>&nbsp; &nbsp;- build.sbt&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;(build definition file)</div></div></div>","width":161.9957275390625,"height":31.995737075805664,"toolTipWidth":491,"toolTipHeight":304}},"node-1745584458233":{"props":{"id":"node-1745584458233","x":13,"y":104,"format":"text","title":"New","text":"build configuration","toolTipText":"- project<div>&nbsp; &nbsp;- build.properties&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</div><div>&nbsp; &nbsp; &nbsp;sbt.version = 1.10.10&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (specifying sbt version)</div><div>- build.sbt</div><div>&nbsp; &nbsp;import sbt.Keys.*&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //imports</div><div>&nbsp; &nbsp;val derby = \"org.apache.derby\" % \"derby\" % \"10.4.1.3\"&nbsp; &nbsp; &nbsp; &nbsp;//defining values</div><div>&nbsp; &nbsp;<i>lazy val root = (project in file(\" . \")).settings(</i></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;name := \"project-name\",&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// := used in settings expression its sbt DSL</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;scalaVersion := \"3.3.5\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"pln\" style=\"color: inherit; font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Courier, monospace; font-size: inherit; box-sizing: border-box;\">libraryDependencies&nbsp;</span><span class=\"pun\" style=\"color: inherit; font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Courier, monospace; font-size: inherit; box-sizing: border-box; font-weight: bold;\">+=</span><span class=\"pln\" style=\"color: inherit; font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Courier, monospace; font-size: inherit; box-sizing: border-box;\">&nbsp;derby</span>)&nbsp; &nbsp; // to add dependencies</div><div>// settings key can be setting key, task key or input key</div><div>// the built in keys are just fields in import sbt.Keys, which is imported by default</div><div>// Typically, lazy val is used to avoid initialisation order</div><div>// TaskKeys define operations - compile, clean, etc... (they return a value)</div>","width":151.9957275390625,"height":29.999971389770508,"toolTipWidth":522,"toolTipHeight":312}}}}